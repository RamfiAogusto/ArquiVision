const express = require('express');
const router = express.Router();
const uploadMiddleware = require('../middlewares/upload.js');
const { createProject, getProjects, getProjectById, deleteProject } = require('../controllers/projectController.js');

console.log("üîç Cargando m√≥dulo routes/projects.js");

// Middleware de debug para todas las rutas en este router
router.use((req, res, next) => {
    console.log(`üõ£Ô∏è [ROUTES/PROJECTS.JS] Procesando ruta: ${req.method} ${req.originalUrl}`);
    console.log(`üõ£Ô∏è [ROUTES/PROJECTS.JS] ¬øBody ya procesado? ${req._body ? 'S√ç' : 'NO'}`);
    next();
});

// Verifica que las funciones existan
console.log("üîç Funciones importadas:", {
    createProject: !!createProject,
    getProjects: !!getProjects,
    getProjectById: !!getProjectById,
    deleteProject: !!deleteProject
});

// Rutas
router.post('/', uploadMiddleware, createProject);

// Solo usar getProjects si existe, de lo contrario usar una funci√≥n de respaldo
router.get('/', getProjects || ((req, res) => {
    console.error("‚ö†Ô∏è getProjects no est√° definida");
    res.status(500).json({ error: "Funci√≥n no implementada" });
}));

// Solo usar getProjectById si existe
router.get('/:id', getProjectById || ((req, res) => {
    console.error("‚ö†Ô∏è getProjectById no est√° definida");
    res.status(500).json({ error: "Funci√≥n no implementada" });
}));

// Solo usar deleteProject si existe
router.delete('/:id', deleteProject || ((req, res) => {
    console.error("‚ö†Ô∏è deleteProject no est√° definida");
    res.status(500).json({ error: "Funci√≥n no implementada" });
}));

module.exports = router;
